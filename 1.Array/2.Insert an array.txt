/* Time Complexity- 0(n)
Insert at the end-0(1)
Insert at the beginning: theta(n)

*/

#include<iostream>
using namespace std;

int insert(int a[], int n, int x, int cap, int pos)
{
    if(n==cap)
        return n;
    int idx=pos-1;
    for(int i=n-1;i>=idx;i--)
    {
        a[i+1]=a[i];

    }

    a[idx]=x;

    return n+1;
}


int main()
{
    int n,cap,pos,x;
    cin>>cap>>n;
    int a[cap];

    for(int i=0;i<n;i++)
    {

        cin>>a[i];
    }

    cout<<"Before Insertion"<<endl;
    for(int i=0;i<n;i++)
    {

        cout<<a[i]<<" ";
    }

    cin>>x>>pos;
    n=insert(a,n,x,cap,pos);//here we initialize n with the size of new array after initializing x into it
    cout<<"After Insertion"<<endl;
    for(int i=0;i<n;i++)
    {
     cout<<a[i]<<" ";//hence we print the new array

    }
 cout<<endl;
    return 0;

}


/*
output: 

5(Cap) 4(n)

7 8 9 4

 before insertion 
 
 7 8 9 4
 
 12 (X) 3(pos)
 
 after insertion 
 
 7 8 12 9 4

*/


/* Time Complexity:

For Unsorted: O(n)
For sorted: O(logn)

*/

//Note: Insert at the end can be done in O(1) time.
 



